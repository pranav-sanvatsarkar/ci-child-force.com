<apex:page controller="FileUploadDemoController" showHeader="false">
	<apex:includeScript value="https://code.jquery.com/jquery-3.2.1.min.js"/>
	<!-- <apex:includeScript value="../soap/ajax/40.0/connection.js"/>-->
    <apex:includescript value="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"/>
    <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
    <apex:includeScript value="{!URLFOR($Resource.connection,'connection.js')}"/>
	<script type="text/javascript">
		Visualforce.remoting.timeout = 12000;
		sforce.connection.sessionId = '{!GETSESSIONID()}';
		
		var fileUploadDemo = angular.module('fileUploadDemo',[]);
		fileUploadDemo.controller('fileUploadDemoController', function($scope,$http){
			
			$scope.fileResult;
			$scope.lstAttachmentWrapper;
			
			$scope.getAttachments = function(){
				Visualforce.remoting.Manager.invokeAction('FileUploadDemoController.getFiles', '{!ObjRecordId}',function(result){
					if( result )
					{
						$scope.lstAttachmentWrapper = result;
						$scope.fileResult = result;
						angular.element('input[type=\'file\']').val(null);
						$scope.uploadProgress = 0;
					}
					else
						$scope.lstAttachmentWrapper = [];
					$scope.$apply();
				});
			}
			
			$scope.getAttachments();
			
			$scope.attachmentFile = {};
			$scope.uploadProgress = 0;
			
			$scope.onFileChanged = function(element){
				$scope.attachmentFile = {};
				$scope.XMLHttpRequest = {};
				if( element.files.length > 0 )
				{
					if( (element.files[0].size/1024)/1024 > 25 )
					{
						var objFormData = new FormData();
		                objFormData.append("fileData", element.files[0]);
		                objFormData.append("formData", "form-data; name='fileUpload', filename=\'" + element.files[0].name + "\'");
		                fileName = element.files[0].name;
						
						$scope.XMLHttpRequest = {
							"async": true,
		                    "crossDomain": true,
		                    "url": "{!$Site.Domain}/services/data/v40.0/connect/files/users/{!$User.Id}",
		                    "method": "POST",
		                    "headers" : {
		                        "Authorization": "Bearer {!$Api.Session_ID}"
		                    },
		                    "processData": false,
		                    "contentType": false,
		                    "mimeType": "multipart/form-data",
		                    "data": objFormData,
		                    "xhr" : function(){
		                    	var thisXhr = new XMLHttpRequest();
		                    	if( thisXhr.upload )
		                    	{
		                    		thisXhr.upload.addEventListener('progress',$scope.progressTrackerXHR,false);
		                    	}
		                    	return thisXhr;
		                    }
						}
					}
					else
					{
						$scope.fileReader = new FileReader();
						$scope.fileReader.onload = function()
						{
							var iCount = 1;
							var bodyListCount = 0;
							var chunkSize = 1023;
							$scope.attachmentFile.Body = '';
							$scope.attachmentFileBodyList = [];
							do
							{
								var binary = '';
								var buffer = $scope.fileReader.result.slice(iCount,( iCount + chunkSize));
								var bytes = new Uint8Array( buffer );
								var len = bytes.byteLength;
								for( var inCount = 0; inCount < len; inCount ++ )
								{
									binary += String.fromCharCode( bytes[inCount] );
								}
								$scope.attachmentFileBodyList[bodyListCount] = window.btoa( binary );
								iCount += chunkSize;
								bodyListCount++;
								
							}while(iCount <= $scope.fileReader.result.byteLength)
							$scope.attachmentFile.Body = $scope.attachmentFileBodyList.toString();
							$scope.attachmentFile.Name = element.files[0].name;
						}
						$scope.fileReader.readAsArrayBuffer( element.files[0] );
					}
					
				}
				else
				{
					alert('No file selected');
				}
			}
			
			$scope.progressTrackerXHR = function(event)
			{
				$scope.uploadProgress = Math.ceil((event.loaded / event.total) * 100);
                $scope.$apply();
                
			}
			
			$scope.uploadFeedAttachment = function()
			{
				if( $scope.XMLHttpRequest != null )
				{
					$.ajax($scope.XMLHttpRequest).done(function (response) {
                        console.log(response);
                        
                        var responseJSON = JSON.parse(response);
                        
                        var contentDocumentLink = new sforce.SObject('ContentDocumentLink');
                        contentDocumentLink.ContentDocumentId = responseJSON.id;
                        contentDocumentLink.LinkedEntityId = '{!$CurrentPage.parameters.id}';
                        contentDocumentLink.ShareType = 'V';
                        
                        var contentDocumentLinks = [];
                        contentDocumentLinks[0] = contentDocumentLink;
                        
                        sforce.connection.create( contentDocumentLinks, function(result){
							$scope.attachmentFile = {};
							$scope.XMLHttpRequest = {};
							$scope.getAttachments();
						}, null );
                        
                        angular.element('input[type=\'file\']').val(null);
                    })
                    .fail(function(response){
                        console.log(response);
                    });
				}
				else
				{
					alert('No files attached!');
				}
			}
			
			$scope.deleteFeedAttachments = function()
			{
				sforce.connection.query('SELECT Id, ContentDocumentId FROM ContentDocumentLink WHERE LinkedEntityId = \'{!$CurrentPage.parameters.id}\'',function(result){
					if( result.records )
					{
						var lstIdsToDelete = [];
						if( result.records.length )
						{
							for( var iCount = 0; iCount < result.records.length; iCount ++ )
							{
								lstIdsToDelete[iCount] = result.records[iCount].ContentDocumentId;
							}
						}
						else
						{
							lstIdsToDelete[0] = result.records.ContentDocumentId;
						}
						sforce.connection.deleteIds(lstIdsToDelete,function(result){
							$scope.getAttachments();
						},null);
					}
				},null);
			}
			
			$scope.uploadAttachment = function(){
				//if( $scope.attachmentFile.Body.length <= 26214400 )
				{
					var attachment = new sforce.SObject('Attachment');
					attachment.Body = $scope.attachmentFile.Body;
					attachment.Name = $scope.attachmentFile.Name;
					attachment.ParentId = '{!$CurrentPage.parameters.id}';
				 	var lstAttachments = [];
					lstAttachments[0] = attachment;
					sforce.connection.create( lstAttachments, function(result){
						$scope.attachmentFile = {};
						$scope.XMLHttpRequest = {};
						$scope.getAttachments();
					}, $scope.progressTrackerXHR );
				}
				//else
				{
					//alert('You cannot upload an attachment of size more that 25 MB');
				}
			} 
			
			$scope.deleteAllAttachments = function()
			{
				Visualforce.remoting.Manager.invokeAction('FileUploadDemoController.deleteAllAttachments','{!$CurrentPage.parameters.id}', function(result, event){
					$scope.getAttachments();
				} );
			}
		});
	</script>
	
	<div ng-app="fileUploadDemo" ng-controller="fileUploadDemoController" style="width:65%;margin-left: 15%; margin-top: 5%">
		<div style="margin:5%">
			<p>Upload a file here</p>
			<input type="file" id="inputAttachment" onchange="angular.element(this).scope().onFileChanged(this)"/>
			<input type="button" value="Upload as attachment" ng-click="uploadAttachment()"/>
			<input type="button" value="Upload as feed attachment" ng-click="uploadFeedAttachment()"/>
			<input type="button" value="Delete all attachments" ng-click="deleteAllAttachments()"/>
			<input type="button" value="Delete all feed attachments" ng-click="deleteFeedAttachments()"/>
			<br/>
			<br/>
			 <div class="progress">
                <div class="progress-bar" style="width:{{uploadProgress}}%"/>
            </div>
            <br/>
			<p>Upload progress: {{uploadProgress}}%</p>
		</div>
		<div style="margin:5%">
            <table class="table table-hover">
                <thead>
                	<tr>
                		<td>Sr #</td>
                		<td>Name</td>
                		<td>Description</td>
                		<td>Type</td>
                		<td>Size</td>
                		<td>Actions</td>
               		</tr>
            	</thead>
                <tbody>
                	<tr ng-repeat="attachment in lstAttachmentWrapper">
                		<td>{{attachment.serialNumber}}</td>
                		<td>{{attachment.title}}</td>
                		<td>{{attachment.description}}</td>
                		<td>{{attachment.attachmentType}}</td>
                		<td>{{attachment.fileSize}}</td>
                		<td>{{attachment.attachmentAction.downloadLink}}</td>
               		</tr>
              	</tbody>
            </table>
        </div>
	</div>
</apex:page>